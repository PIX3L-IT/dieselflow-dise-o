@startuml
title US-13-Descargar Reporte

actor Administrador

boundary "reportes.routes" as R
boundary "reportes.ejs" as View
control "reportes.controller.js" as C
entity "reportes.model.js" as M_Reporte
database "MongoDB" as DB

== Frontend ==
Administrador -> R: GET /reportes
activate R
R -> View: Renderizar vista vacía (sin datos)
deactivate R

activate View
View -> Administrador: Mostrar página con filtros vacíos
deactivate View

Administrador -> R: POST /reportes (con filtros)
activate R
R -> C: getReportes(filtros)
deactivate R

== Backend ==
activate C
C ->> M_Reporte: fetchReport124s(filtros)
activate M_Reporte
M_Reporte ->> DB: db.execute(query)
activate DB
DB -->> M_Reporte: Datos de reportes filtrados
deactivate DB
M_Reporte -->> C: Datos de reportes
deactivate M_Reporte
C -> R: Retornar datos de reportes
deactivate C

== Frontend ==
activate R
R -> View: response.render(reporte)
deactivate R

activate View
View -> Administrador: Mostrar reportes filtrados en tabla
deactivate View

== Frontend ==
Administrador -> R: POST /descargar (reportes seleccionados)
activate R
R -> C: generateReportFile(reportes seleccionados)
deactivate R

== Backend ==
activate C
C ->> M_Reporte: fetchData(reportes seleccionados)
activate M_Reporte
M_Reporte ->> DB: db.execute(query)
activate DB
DB -->> M_Reporte: Datos del reporte seleccionado
deactivate DB
M_Reporte -->> C: Datos del reporte seleccionado
deactivate M_Reporte

C -> C: Generar archivo PDF
C --> R: Responder con archivo descargable
deactivate C

== Frontend ==
activate R
R -> Administrador: Descargar archivo PDF
deactivate R

Administrador -> Administrador: Recibe archivo en su dispositivo

@enduml